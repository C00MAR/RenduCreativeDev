@import "/font/css/clash-display.css";

body {
    font-family: 'ClashDisplay-Medium';
    font-size: 16px;
    color: #eeeeee;
    overflow-x: hidden;
    overscroll-behavior: none;
    background-image: url('./assets/background.png');
    background-size: cover;
    background-repeat: no-repeat;
    
}

h1, h2, h3, h4, h5, h6 {
    font-size: 2rem !important;
    font-family: 'ClashDisplay-Bold';
}

.herobanner {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    width: 100vw;
    position: relative;
    // overflow: hidden;
    // background: rgb(130, 0, 162);
    
    &__icon {
        width: 20vw;
        
        svg {
            width: 100%;
            filter: drop-shadow(0 0 0.75rem rgb(255, 255, 255));
            
            path {
                fill: #eeeeee;
            }
        }
    }
    
    &__TitleAlbum {
        width: 100vw;
        margin-top: auto;
        
        & svg {
            width: 100%;
        }
    }

    .wrap {
        position: relative;
        width: 100%;
        height: 100%;
        perspective: 1000px;
        overflow: hidden;
        
        .svg {
            position: absolute;
            transform-style: preserve-3d;
        }
    }
}

.noise::before {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    content: '';
    opacity: 0.05;
    z-index: 1000;
    pointer-events: none;
    background: url('/public/noise.gif');
}

.slider {
    overscroll-behavior: none;
    width: 300%;
    height: 100%;
    display: flex;
    flex-wrap: nowrap;
    
    &__Page {
        width: 100vw;
        height: 100vh;
        
        &:nth-child(1) {
            background: rgb(130, 0, 162);
        }
        
        &:nth-child(2) {
            background: rgb(130, 0, 162);
        }

        &:nth-child(3) {
            background: rgb(130, 0, 162);
    
        }
    }
}

.canva {
    height: 100vh;
    width: 100vw;
    background: rgb(130, 0, 162);
}


// Create floating animation keyframes
@keyframes float-x {
    0% { transform: translateX(0); }
    50% { transform: translateX(100px); }
    100% { transform: translateX(0); }
}

@keyframes float-y {
    0% { transform: translateY(0); }
    50% { transform: translateY(100px); }
    100% { transform: translateY(0); }
}

@keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

$total: 4;

@for $i from 1 through $total {
    .svg:nth-child(#{$i}) {
        left: 15% + ($i * 15%);
        top: 20% + ($i * 10%);
        animation: 
            float-x #{10 + $i * 3}s ease-in-out infinite,
            float-y #{8 + $i * 2}s ease-in-out infinite alternate,
            rotate #{20 + $i * 5}s linear infinite;
        animation-delay: -#{$i * 2}s;
        transform: scale(#{0.4 + $i * 0.15});
        z-index: $i - 7;
        filter: blur(#{$i - 6}px);
        opacity: 0.8;
        
        &:hover {
            animation-play-state: paused;
        }
    }
}

// Add different movement patterns for each SVG
.svg:nth-child(1) { animation-timing-function: ease-in-out; }
.svg:nth-child(2) { animation-timing-function: ease-out; }
.svg:nth-child(3) { animation-timing-function: linear; }
.svg:nth-child(4) { animation-timing-function: ease-in; }

// Add different directions for each SVG
.svg:nth-child(1) { animation-direction: alternate; }
.svg:nth-child(2) { animation-direction: alternate-reverse; }
.svg:nth-child(3) { animation-direction: normal; }
.svg:nth-child(4) { animation-direction: reverse; }
